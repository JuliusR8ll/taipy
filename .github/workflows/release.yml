name: Create Github Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release/package version to create (ex: 1.0.0)"
        required: true

jobs:
  release-package:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Setup Version
        id: version-setup
        run: |
          python tools/release/setup_version.py taipy prod "${{ github.event.inputs.version }}" "${{ steps.extract_branch.outputs.branch }}"

      - name: Modify README image file path
        run: |
          python tools/modify_readme.py "${{ github.event.repository.name }}" "${{ steps.extract_branch.outputs.branch }}"

      - name: Get taipy-gui version from setup.py
        id: taipy_gui_version
        run: |
          python tools/release/extract_from_setup.py >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      - name: Install Taipy Gui
        run: |
          # install taipy-gui from based on setup.py version
          pip install "${{ steps.taipy_gui_version.outputs.VERSION }}"

      - name: Build Taipy package
        run: |
          python setup.py build_py && python -m build
          rm -rf taipy

      - name: Install the Taipy package and test it
        run: |
          # Install package
          echo "Installing package..."
          pip install dist/*.tar.gz

      - name: Check Taipy Installation
        run: |
          python tools/validate_taipy_install.py

      - name: Extract commit hash
        shell: bash
        run: echo "HASH=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        id: extract_hash

      - name: Create/update release and tag
        run: |
            gh release create ${{ github.event.inputs.version }} ./dist/${{ github.event.repository.name }}-${{ github.event.inputs.version }}.tar.gz --target ${{ steps.extract_hash.outputs.HASH }} --title ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
